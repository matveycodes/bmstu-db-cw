version: "3.8"

services:
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
      target: app-server
    env_file:
      - ".env"
    depends_on:
      - pg_db
      - mongo_db
    restart: unless-stopped

  cli:
    build:
      context: ./cli
      dockerfile: Dockerfile
    tty: true
    environment:
      CLI_TARGET_URL: ${CLI_TARGET_URL}
    depends_on:
      - app

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL}
    depends_on:
      - app
    volumes:
      - frontend_static:/app/build

  nginx:
    image: nginx:stable
    restart: unless-stopped
    depends_on:
      - app
      - frontend
    volumes:
      - frontend_static:/var/www/frontend/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "3000:3000"
      - "3001:3001"

  pg_db:
    image: postgis/postgis:15-3.3
    restart: on-failure
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: ${TZ}
      PGTZ: ${TZ}
    volumes:
      - ./pg/init/:/docker-entrypoint-initdb.d/
      - pg_data:/var/lib/postgresql/data

  mongo_db:
    image: mongo:6-jammy
    restart: on-failure
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
      TZ: ${TZ}
    ports:
      - "27017:27017"
    volumes:
      - ./mongo/init/:/docker-entrypoint-initdb.d/
      - mongo_data:/data/db

volumes:
  pg_data:
  mongo_data:
  frontend_static: